@model IEnumerable<Dental_Clinic_System.Areas.Admin.ViewModels.ManagerAccountVM>

@{
	ViewData["Title"] = "Danh sách tài khoản nha sĩ";
	Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
	.inline-block {
		display: inline-block;
		vertical-align: top;
	}

	.form-inline {
		display: inline-block;
		margin: 0;
	}

	.account__management .color-trash button {
		background: rgb(255, 66, 66); /* Nền đỏ */
		color: white; /* Màu chữ trắng */
	}

	.sidebar .nav-item a.Quan_ly_tai_khoan {
		color: #fff;
		background: #4880ff;
	}

	.modal-content {
		--mdb-modal-box-shadow: 0 6px 45px -9px rgba(var(--mdb-box-shadow-color-rgb), 0.21), 0 30px 60px -6px rgba(var(--mdb-box-shadow-color-rgb), 0.12);
		border: 0;
		box-shadow: var(--mdb-modal-box-shadow);
		padding: 1px 8px !important;
		border-radius: 17px;
	}

	.form-modal-styles {
		width: 46%;
	}

	.specialties-container {
		display: flex;
		flex-wrap: wrap;
		gap: 10px;
	}

	.form-check {
		width: calc(50% - 10px);
		align-items: center;
	}

	.form-check-label {
		margin-left: -27px;
	}

	.account__management .table tbody span {
		font-weight: 200;
	}

	#specialties .form-check-input {
		margin-right: 10px;
		width: auto;
	}

	#specialties .form-check-label {
		margin-left: 3px;
		font-size: 1.7rem;
	}
</style>


<!-- TÌM KIẾM (SEARCH)-->
<!-- account management header -->
<div class="account__management__header">
	<div class="title">Tài khoản nha sĩ</div>
	<div class="action-btn">
		<form action="~/Admin/AccountDentist/SearchAccount" method="get">
			<div class="search__bar">
				<input type="search" placeholder="Tìm kiếm ..." name="keyword" />
			</div>
		</form>

		<button type="button"
				data-bs-toggle="modal"
				data-bs-target="#myModal"
				class="add__new">
			+ Thêm
		</button>
	</div>
</div>


<!-- Modal For Add new User -->
<!-- THÊM MỚI NGƯỜI DÙNG (ADD)-->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="mainTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered form-modal-styles">
		<form action="~/Admin/AccountDentist/AddAccount" method="POST" class="modal-content" onsubmit="return validateForm()">
			<div class="modal-header">
				<h1 class="modal-title fs-10" id="mainTitle">
					Thêm mới tài khoản nha sĩ
				</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row mb-3">
					<div class="col">
						<label for="username">Tên đăng nhập<sup style="color:red">*</sup></label>
						<input type="text" name="Username" id="username" required />
						<span id="usernameError" class="text-danger"></span>
						<span for="Name" class="text-danger"></span>
					</div>
					<div class="col">
						<label for="password">Mật khẩu<sup style="color:red">*</sup></label>
						<input type="password" name="Password" id="password" required />
						<span id="passwordError" class="text-danger"></span>
					</div>
				</div>
				<div class="row mb-3">
					<div class="col-12 col-md-6">
						<label for="lastname">Họ<sup style="color:red">*</sup></label>
						<input type="text" id="lastame" name="LastName" required />
					</div>
					<div class="col-12 col-md-4">
						<label for="firstname">Tên<sup style="color:red">*</sup></label>
						<input type="text" id="firstname" name="FirstName" required />
					</div>
					<div class="col-12 col-md-2">
						<label for="gender">Giới tính</label>
						<select id="gender" name="Gender" class="form-control">
							<option value="Nam">Nam</option>
							<option value="Nữ">Nữ</option>
						</select>
					</div>
				</div>
				<div class="row mb-3">
					<div class="col">
						<label for="email">Email<sup style="color:red">*</sup></label>
						<input type="email" name="Email" id="email" required />
						<span id="emailError" class="text-danger"></span>
						<span for="Email" class="text_danger"></span>
					</div>
					<div class="col">
						<label for="phonenumber">Số điện thoại<sup style="color:red">*</sup></label>
						<input type="tel" name="PhoneNumber" id="phonenumber" required />
						<span id="phoneNumberError" class="text-danger"></span>
						<span for="PhoneNumber" class="text_danger"></span>
					</div>
				</div>
				<div class="row mb-3">
					<div class="col">
						<label for="degreeID">Bằng cấp<sup style="color:red">*</sup></label>
						<select name="DegreeID" id="degreeID" class="form-control" required></select>
					</div>
					<div class="col">
						<label for="clinicID">Phòng khám<sup style="color:red">*</sup></label>
						<select name="ClinicID" id="clinicID" class="form-control" required></select>
					</div>
				</div>
				<div class="row mb-3">
					<div class="col">
						<label for="specialties">Các chuyên khoa gồm có:<sup style="color:red">*</sup></label>
						<div id="specialties" class="specialties-container"></div>
					</div>
				</div>

			</div>

			<div class="modal-footer">
				<button type="button" class="close-btn btn" data-bs-dismiss="modal">
					Đóng
				</button>
				<button type="submit" class="submit-btn btn">
					Lưu
				</button>
			</div>
		</form>
	</div>
</div>


<!-- Thông báo lỗi bị trùng -->
@if (!ViewData.ModelState.IsValid)
{
	<div class="alert alert-danger" role="alert">
		@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
		{
			<span>@error.ErrorMessage</span>

			<br />
		}
	</div>
}

<!--SHOW LIST-->
<table class="table table-striped mt-5" style="font-size: 1.6rem">
	<thead>
		<tr>
			<th class="text-center">STT</th>
			<th>Tên đăng nhập</th>
			<th>Họ tên</th>
			<th>Giới tính</th>
			<th>Phòng khám</th>
			<th>Chuyên khoa</th>
			<th>Email</th>
			<th>Số điện thoại</th>
			<th>Hành động</th>
		</tr>
	</thead>
	<tbody id="myTableBody">
		@if (Model != null && Model.Any())
		{
			int stt = 1;
			@foreach (var account in Model)
			{
				<tr style="vertical-align: middle">
					<td style="text-align: center">@stt</td>
					<td>
						@* <img src="~/assets/images/avatar.jpg" alt="" /> *@
						@account.Username
					</td>
					<td>@account.LastName @account.FirstName</td>
					<td>@account.Gender</td>
					<td>@account.ClinicName</td>
					<td>
						@foreach (var specialty in account.Specialties)
						{
							<span class="specialty-item">@specialty</span> <br />
						}
					</td>
					<td>@account.Email</td>
					<td>@account.PhoneNumber</td>
					<td>
						<!--EDIT-->
						<a asp-area="Admin" asp-controller="AccountDentist" asp-action="EditAccountDentist" asp-route-id="@account.Id" class="inline-block">
							<button type="button">
								<i class="bx bxs-edit"></i>
							</button>
						</a>

						<!--DELETE-->
						<form action="~/Admin/AccountDentist/HiddenAccountStatus" method="post" class="form-inline" onsubmit="return confirm('Bạn có chắc chắn muốn khóa tài khoản này không?');">
							<input type="hidden" name="username" value="@account.Username" />
							<input type="hidden" name="status" value="Bị Khóa" />
							<a href="#!" class="color-trash">
								<button type="submit">
									<i class="bx bxs-lock"></i>
								</button>
							</a>
						</form>
					</td>
				</tr>
				stt++;
			}
		}
	</tbody>
</table>

<!-- ========== PAGINATION  ========== -->
<ul class="pagination" id="pagination">
</ul>

<script src="~/assets/js/pagination.js"></script>


@section Scripts {
	<!-- Thông báo lỗi -->
	<script>
		function validateForm() {
			let isValid = true;

			//Xác thực Username
			const username = document.getElementById('username').value;
			const usernameError = document.getElementById('usernameError');
			const usernameRegex = /^[a-zA-Z][a-zA-Z0-9]{2,29}$/;
			if (!usernameRegex.test(username)) {
				usernameError.innerText = "Tên đăng nhập phải có ít nhất 3 ký tự, chỉ chứa các chữ cái và số, và bắt đầu bằng chữ cái.";
				isValid = false;
			} else {
				usernameError.innerText = "";
			}

			//Xác thực mật khẩu
			const password = document.getElementById('password').value;
			const passwordError = document.getElementById('passwordError');
			const passwordRegex = /^[a-zA-Z][a-zA-Z0-9]{2,29}$/;
			if (!passwordRegex.test(password)) {
				passwordError.innerText = "Mật khẩu phải có ít nhất 3 ký tự, chỉ chứa các chữ cái và số, và bắt đầu bằng chữ cái.";
				isValid = false;
			} else {
				passwordError.innerText = "";
			}

			//Xác thực Email
			const email = document.getElementById('email').value;
			const emailError = document.getElementById('emailError');
			if (email.length < 3 || email.length > 50) {
				emailError.innerText = "Email phải có ít nhất 3 ký tự và không vượt quá 50 ký tự.";
				isValid = false;
			} else {
				emailError.innerText = "";
			}

			//Xác thực số điện thoại
			const phoneNumber = document.getElementById('phonenumber').value;
			const phoneNumberError = document.getElementById('phoneNumberError');
			const phoneNumberRegex = /^\d{9,11}$/;
			if (!phoneNumberRegex.test(phoneNumber)) {
				phoneNumberError.innerText = "Số điện thoại phải có độ dài từ 9 đến 11 số.";
				isValid = false;
			} else {
				phoneNumberError.innerText = "";
			}

			return isValid;
		}
	</script>

	<!--  -->
	<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		$(document).ready(function () {
			$('#myModal').on('show.bs.modal', function (e) {
				var degreesRequest = $.ajax({
					url: '@Url.Action("GetDegrees", "AccountDentist")',
					type: 'GET'
				});

				var clinicsRequest = $.ajax({
					url: '@Url.Action("GetClinics", "AccountDentist")',
					type: 'GET'
				});

				var specialtiesRequest = $.ajax({
					url: '@Url.Action("GetSpecialties", "AccountDentist")',
					type: 'GET'
				});

				$.when(degreesRequest, clinicsRequest, specialtiesRequest).done(function (degreesResponse, clinicsResponse, specialtiesResponse) {
					var degreesData = degreesResponse[0];
					var clinicsData = clinicsResponse[0];
					var specialtiesData = specialtiesResponse[0];

					var degreeSelect = $('#degreeID');
					degreeSelect.empty();
					degreesData.forEach(function (degree) {
						degreeSelect.append(new Option(degree.name, degree.id));
					});

					var clinicSelect = $('#clinicID');
					clinicSelect.empty();
					clinicsData.forEach(function (clinic) {
						clinicSelect.append(new Option(clinic.name, clinic.id));
					});

					// var specialtySelect = $('#specialtyID');
					// specialtySelect.empty();
					// specialtiesData.forEach(function (specialty) {
					// 	specialtySelect.append(new Option(specialty.name, specialty.id));
					// });
					var specialtyDiv = $('#specialties');
					specialtyDiv.empty();
					specialtiesData.forEach(function (specialty) {
						specialtyDiv.append('<div class="form-check">' +
							'<label class="form-check-label" for="specialty' + specialty.id + '">' + specialty.name + '</label>' +
							'<input class="form-check-input" type="checkbox" value="' + specialty.id + '" id="specialty' + specialty.id + '" name="selectSpecialty">' +
							'</div>');
					});
				}).fail(function () {
					alert('Không truy cập được bằng cấp, phòng khám hoặc chuyên khoa.');
				});
			});
		});
	</script>
}
