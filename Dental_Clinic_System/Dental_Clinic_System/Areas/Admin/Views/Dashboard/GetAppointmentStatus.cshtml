@model Dental_Clinic_System.Areas.Admin.ViewModels.DashboardVM

@{
	ViewData["Title"] = "Dashboard";
	Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

	var monthOptions = new System.Text.StringBuilder();
	var now = Dental_Clinic_System.Helper.Util.GetUtcPlus7Time();
	for (int m = 1; m <= 12; m++)
	{
		var selected = (m == Model.SelectedMonth) ? "selected=\"selected\"" : "";
		monthOptions.AppendFormat("<option value=\"{0}\" {1}>{0}/{2}</option>", m, selected, now.Year);
	}
}

<style>
	.dashboard__info__chartDai,
	.dashboard__info__chartTron,
	.dashboard__info__chartCot {
		width: 48%;
		height: 500px;
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
		border-radius: 8px;
		padding: 16px;
		background-color: #ffffff;
		margin-bottom: 20px;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}

		.dashboard__info__chartTron canvas {
			height: 400px !important;
			width: 400px !important;
		}

	.chart-title {
		text-align: center;
		margin-bottom: 10px;
		font-size: 18px;
		font-weight: bold;
	}

	.charts-container {
		display: flex;
		justify-content: space-between;
		align-items: flex-start;
		flex-wrap: wrap;
		gap: 20px;
		margin: 20px 0;
	}

	.dashboard__info__title {
		text-align: center;
		margin-bottom: 20px;
		font-size: 39px;
		font-weight: bold;
	}

	.month-select-label {
		font-weight: bold;
	}

	.sidebar .nav-item a.Dashboard {
		color: #fff;
		background: #4880ff;
	}
</style>

<div class="dashboard__info">
	<h1 class="dashboard__info__title mb-0">Dashboard</h1>
	</br>

	<!-- ============ CHART ============ -->
	<div class="charts-container">
		@* Biểu đồ cột *@
		<div class="dashboard__info__chartDai">
			<h2 class="chart-title">Tổng Đặt Lịch Khám Thành Công/Thất Bại So Với Cùng Kỳ Năm Trước</h2>
			<div class="chart-header">
				<label for="monthSelect" class="month-select-label">Tháng/Năm:</label>
				<select id="monthSelect" onchange="location.href=this.value;">
					@Html.Raw(monthOptions.ToString())
				</select>
			</div>
			<canvas id="myChart" style="width: 100%; height: 400px"></canvas>
		</div>

		@* Biểu đồ tròn *@
		<div class="dashboard__info__chartTron">
			<h2 class="chart-title">Tổng Số Hợp Tác/ Từ Chối Yêu Cầu Của Phòng Khám Theo Tháng</h2>
			<div class="chart-header">
				<label for="orderMonthSelect" class="month-select-label">Tháng:</label>
				<select id="orderMonthSelect">
					@for (int i = 1; i <= 12; i++)
					{
						<option value="@i">@i</option>
					}
				</select>
			</div>
			<canvas id="orderChart" style="width: 100%; height: 300px"></canvas>
		</div>

		@* Biểu đồ cột *@
		<div class="dashboard__info__chartCot">
			<h2 class="chart-title">Tổng Số Tin Tức Được Đăng Trong Mỗi Tháng</h2>
			<canvas id="newsChart" style="width: 100%; height: 400px"></canvas>
		</div>

		@* Biểu đồ tròn cho Rating của mỗi phòng khám *@
		<div class="dashboard__info__chartTron">
			<h2 class="chart-title">Đánh Giá Của Mỗi Phòng Khám</h2>
			</br>
			<canvas id="clinicRatingChart" style="width: 100%; height: 300px"></canvas>
		</div>
	</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var monthSelect = document.getElementById('monthSelect');
			monthSelect.addEventListener('change', function () {
				var selectedMonth = this.value;
				var url = '@Url.Action("GetAppointmentStatus", "Dashboard", new { area = "Admin", month = "__month__" })';
				window.location.href = url.replace("__month__", selectedMonth);
			});

			var ctx = document.getElementById('myChart').getContext('2d');
			var successfulCurrent = @Model.SuccessfulAppointmentsCurrentYear;
			var successfulPrevious = @Model.SuccessfulAppointmentsPreviousYear;
			var failedCurrent = @Model.FailedAppointmentsCurrentYear;
			var failedPrevious = @Model.FailedAppointmentsPreviousYear;

			var selectedMonth = @Model.SelectedMonth;
			var selectedYear = @Model.SelectedYear;

			var labels = [
				'Thành công (' + selectedMonth + '/' + selectedYear + ')',
				'Thành công (' + selectedMonth + '/' + (selectedYear - 1) + ')',
				'Thất bại (' + selectedMonth + '/' + selectedYear + ')',
				'Thất bại (' + selectedMonth + '/' + (selectedYear - 1) + ')'
			];

			var myChart = new Chart(ctx, {
				type: 'bar',
				data: {
					labels: labels,
					datasets: [{
						label: 'Đặt Lịch',
						data: [successfulCurrent, successfulPrevious, failedCurrent, failedPrevious],
						backgroundColor: [
							'rgba(75, 192, 192, 0.2)',
							'rgba(75, 192, 192, 0.5)',
							'rgba(255, 99, 132, 0.2)',
							'rgba(255, 99, 132, 0.5)'
						],
						borderColor: [
							'rgba(75, 192, 192, 1)',
							'rgba(75, 192, 192, 1)',
							'rgba(255, 99, 132, 1)',
							'rgba(255, 99, 132, 1)'
						],
						borderWidth: 1
					}]
				},
				options: {
					scales: {
						y: {
							beginAtZero: true,
							ticks: {
								stepSize: 1
							}
						}
					}
				}
			});

			//Biểu đồ tròn
			var orderCtx = document.getElementById('orderChart').getContext('2d');
			var acceptedOrdersMonthly = @Html.Raw(Json.Serialize(Model.AcceptedOrdersMonthly));
			var rejectedOrdersMonthly = @Html.Raw(Json.Serialize(Model.RejectedOrdersMonthly));

			function updateOrderChart(month) {
				orderChart.data.datasets[0].data = [
					acceptedOrdersMonthly[month - 1],
					rejectedOrdersMonthly[month - 1]
				];
				orderChart.update();
			}

			var orderChart = new Chart(orderCtx, {
				type: 'pie',
				data: {
					labels: ['Đồng ý', 'Từ chối'],
					datasets: [{
						data: [
							acceptedOrdersMonthly[@Model.SelectedMonth - 1],
							rejectedOrdersMonthly[@Model.SelectedMonth - 1]
						],
						backgroundColor: [
							'rgba(75, 192, 192, 0.2)',
							'rgba(255, 99, 132, 0.2)'
						],
						borderColor: [
							'rgba(75, 192, 192, 1)',
							'rgba(255, 99, 132, 1)'
						],
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						legend: {
							display: true,
							position: 'top'
						}
					}
				}
			});

			document.getElementById('orderMonthSelect').addEventListener('change', function () {
				updateOrderChart(this.value);
			});

			//Biểu đồ cột
			var newsCtx = document.getElementById('newsChart').getContext('2d');
			var newsData = @Html.Raw(Json.Serialize(Model.MonthlyNewPost));

			var newsChart = new Chart(newsCtx, {
				type: 'bar',
				data: {
					labels: Array.from({ length: 12 }, (v, i) => `Tháng ${i + 1}`),
					datasets: [{
						label: 'Số Lượng Tin Tức',
						data: newsData,
						backgroundColor: [
							'rgba(54, 162, 235, 0.2)', // Tháng 1
							'rgba(255, 99, 132, 0.2)', // Tháng 2
							'rgba(255, 206, 86, 0.2)', // Tháng 3
							'rgba(75, 192, 192, 0.2)', // Tháng 4
							'rgba(153, 102, 255, 0.2)', // Tháng 5
							'rgba(255, 159, 64, 0.2)', // Tháng 6
							'rgba(255, 99, 132, 0.2)', // Tháng 7
							'rgba(54, 162, 235, 0.2)', // Tháng 8
							'rgba(75, 192, 192, 0.2)', // Tháng 9
							'rgba(153, 102, 255, 0.2)', // Tháng 10
							'rgba(255, 206, 86, 0.2)', // Tháng 11
							'rgba(255, 159, 64, 0.2)'  // Tháng 12
						],
						borderColor: [
							'rgba(54, 162, 235, 1)',
							'rgba(255, 99, 132, 1)',
							'rgba(255, 206, 86, 1)',
							'rgba(75, 192, 192, 1)',
							'rgba(153, 102, 255, 1)',
							'rgba(255, 159, 64, 1)',
							'rgba(255, 99, 132, 1)',
							'rgba(54, 162, 235, 1)',
							'rgba(75, 192, 192, 1)',
							'rgba(153, 102, 255, 1)',
							'rgba(255, 206, 86, 1)',
							'rgba(255, 159, 64, 1)'
						],
						borderWidth: 1
					}]
				},
				options: {
					scales: {
						x: {
							beginAtZero: true
						},
						y: {
							beginAtZero: true,
							ticks: {
								stepSize: 5,
								callback: function (value, index, values) {
									return value;
								}
							}
						}
					}
				}
			});

			//Biểu đồ tròn cho Rating của mỗi phòng khám
			var clinicRatingCtx = document.getElementById('clinicRatingChart').getContext('2d');
			var clinicNames = @Html.Raw(Json.Serialize(Model.ClinicNames));
			var clinicRatings = @Html.Raw(Json.Serialize(Model.ClinicRatings));

			var clinicRatingChart = new Chart(clinicRatingCtx, {
				type: 'pie',
				data: {
					labels: clinicNames,
					datasets: [{
						data: clinicRatings,
						backgroundColor: [
							'rgba(54, 162, 235, 0.2)',
							'rgba(255, 99, 132, 0.2)',
							'rgba(255, 206, 86, 0.2)',
							'rgba(75, 192, 192, 0.2)',
							'rgba(153, 102, 255, 0.2)',
							'rgba(255, 159, 64, 0.2)',
							'rgba(255, 99, 132, 0.2)',
							'rgba(54, 162, 235, 0.2)',
							'rgba(75, 192, 192, 0.2)',
							'rgba(153, 102, 255, 0.2)',
							'rgba(255, 206, 86, 0.2)',
							'rgba(255, 159, 64, 0.2)'
						],
						borderColor: [
							'rgba(54, 162, 235, 1)',
							'rgba(255, 99, 132, 1)',
							'rgba(255, 206, 86, 1)',
							'rgba(75, 192, 192, 1)',
							'rgba(153, 102, 255, 1)',
							'rgba(255, 159, 64, 1)',
							'rgba(255, 99, 132, 1)',
							'rgba(54, 162, 235, 1)',
							'rgba(75, 192, 192, 1)',
							'rgba(153, 102, 255, 1)',
							'rgba(255, 206, 86, 1)',
							'rgba(255, 159, 64, 1)'
						],
						borderWidth: 1
					}]
				},
				options: {
					responsive: true,
					plugins: {
						legend: {
							display: true,
							position: 'top'
						}
					}
				}
			});

		});
	</script>
}
